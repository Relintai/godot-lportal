os: Visual Studio 2017

environment:
  HOME: "%HOMEDRIVE%%HOMEPATH%"
  PYTHON: C:\Python27
  SCONS_CACHE_ROOT: "%HOME%\\scons_cache"
  SCONS_CACHE_LIMIT: 1024
  GODOT_REPO_URL: "https://github.com/godotengine/godot"
  
  matrix:
    #- VS: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat
    - VS: C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat
      GD_PLATFORM: windows
      TOOLS: yes
      TARGET: release_debug
      ARCH: amd64

cache:
  - "%SCONS_CACHE_ROOT%"

install:
  - SET "PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - pip install -U wheel  # needed for pip install scons to work, otherwise a flag is missing
  - pip install scons==3.0.1
  - if defined VS call "%VS%" %ARCH%  # if defined - so we can also use mingw

before_build:
  # Get Godot source and install the module
  - mkdir Artifacts
  - cd %APPVEYOR_BUILD_FOLDER%\..
  #- echo.> my_file.txt
  - git clone --depth=1 --branch=3.2 %GODOT_REPO_URL% && cd godot
  #- mkdir godot && cd godot && mkdir modules
  - mklink /d modules\lportal %APPVEYOR_BUILD_FOLDER%

  - echo %GD_PLATFORM%
  #- python --version
  #- scons --version
  #- cl.exe
  - SET "SCONS_CACHE=%SCONS_CACHE_ROOT%\3.2"

build_script:
- scons platform=%GD_PLATFORM% target=%TARGET% tools=%TOOLS% debug_symbols=no progress=no gdnative_wrapper=yes
#- scons --version
#- cd ..
- ls
#- dir /s

after_build:
  - cd %APPVEYOR_BUILD_FOLDER%\..
  - xcopy godot\bin\*.exe %APPVEYOR_BUILD_FOLDER%\Artifacts\

artifacts:
  - path: 'Artifacts\*.*'
#  - path: godot\bin\*.exe
    name: GodotBinary
  
